archivesBaseName = "${mod_name.replace(" ", "")}-Fabric-${minecraft_version}"

dependencies {
    // Core
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api}"

    // Add your deps here
    implementation "com.hypherionmc.craterlib:CraterLib-Fabric-1.19.2:${craterlib}:dev"
    shade("me.hypherionmc.sdlink:mcdiscordformatter-fabric-1.19.1:${formatter_ver}")

    // Compat
    modImplementation "maven.modrinth:fabrictailor:2.0.1"
    modImplementation "maven.modrinth:simplechatfork:1.6.1"
    modImplementation "maven.modrinth:vanish:1.4.0+1.19.3"

    // Do not edit or remove
    implementation project(":Common")
}

shadowJar {
    from sourceSets.main.output
    configurations = [project.configurations.shade]
    setArchiveClassifier('dev-shadow')
}

/**
 * ===============================================================================
 * =       DO NOT EDIT BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING        =
 * ===============================================================================
 */

unimined.minecraft {
    fabric {
        loader fabric_loader
    }
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set "dev"
}

processResources {
    from project(":Common").sourceSets.main.resources
    def buildProps = project.properties.clone()

    filesMatching(['fabric.mod.json']) {
        expand buildProps
    }
}

compileTestJava.enabled = false

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}