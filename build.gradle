plugins {
    id 'java'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)' apply false
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT' apply false
    id 'com.github.johnrengelman.shadow' version '8.0.0' apply false
}

ext {
    release = project.properties['release'] ?: false
}

def version_base = "${project.version_major}.${project.version_minor}"
def final_ver = "${version_base}.${project.version_patch}"

// Jenkins
if (System.getenv('BUILD_NUMBER') != null && project.release == false) {
    final_ver = version_base + "." + System.getenv('BUILD_NUMBER') + "d"
}

version = "${final_ver}"

subprojects {
    version = "${final_ver}"
    group = project.group

    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    jar {
        archiveClassifier = 'slim'

        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'              : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {
        mavenCentral()

        maven {
            name = 'First Dark Maven'
            url = 'https://maven.firstdark.dev/releases/'
        }
        maven {
            name = 'First Dark Maven'
            url = 'https://maven.firstdark.dev/snapshots/'
        }
        maven {
            name = 'First Dark Mirror'
            url = 'https://mcentral.firstdark.dev/releases/'
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    clean {
        delete "$rootDir/artifacts"
    }

    if (project.name !== 'Common') {
        task delDevJar {
            doLast {
                def tree = fileTree('build/libs')
                tree.include '**/*-dev.jar'
                tree.include '**/*-dev-shadow.jar'
                tree.include '**/*-all.jar'
                tree.include '**/*-slim.jar'
                tree.each { it.delete() }
            }
        }
        build.finalizedBy delDevJar

        task copyAllArtifacts(type: Copy) {
            from "$buildDir/libs"
            into "$rootDir/artifacts"
            include("*.jar")
        }

        build.finalizedBy(copyAllArtifacts)
    }
}

